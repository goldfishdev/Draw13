.NOLIST


; I got this from an old forum post. not meant for C but I've adapted it

; By Adam Ward
; A font for use in mode 13h graphics programs

; 0 means a pixel is not drawn (or is drawn with a background color)
; 1 means the pixel is part of the font and is drawn with a foreground color

; I set these in my code for ease of use
; BYTES_PER_CHAR = 6
; SCR_WIDTH = 320
; SCR_HEIGHT = 200
; CHAR_WIDTH = 5
; CHAR_HEIGHT = BYTES_PER_CHAR
; KERNING = CHAR_WIDTH + 1

; does not provide visible characters for non-alphanumeric or non-punctuation characters


AWFont		BYTE		(BYTES_PER_CHAR * 32) DUP(0)		; the first 32 control characters are invisible

; chr(32) [SPACE]
			BYTE		00000000b,
						00000000b,
						00000000b,
						00000000b,
						00000000b,
						00000000b

; chr(33) [!]
			BYTE		00100000b,
						00100000b,
						00100000b,
						00100000b,
						00000000b,
						00100000b

; chr(34) ["]
			BYTE		01010000b,
						01010000b,
						00000000b,
						00000000b,
						00000000b,
						00000000b

; chr(35) [#]
			BYTE		00000000b,
						01010000b,
						11111000b,
						01010000b,
						11111000b,
						01010000b

; chr(36) [$]
			BYTE		00100000b,
						01110000b,
						10100000b,
						01110000b,
						00101000b,
						01110000b

; chr(37) [%]
			BYTE		11001000b,
						11010000b,
						00100000b,
						00100000b,
						01011000b,
						10011000b

; chr(38) [&]
			BYTE		01110000b,
						01010000b,
						01100000b,
						10110000b,
						10011000b,
						01101000b

; chr(39) [']
			BYTE		00100000b,
						00100000b,
						01000000b,
						00000000b,
						00000000b,
						00000000b

; chr(40) [(]
			BYTE		00010000b,
						00100000b,
						00100000b,
						00100000b,
						00100000b,
						00010000b

; chr(41) [)]
			BYTE		01000000b,
						00100000b,
						00100000b,
						00100000b,
						00100000b,
						01000000b

; chr(42) [*]
			BYTE		00100000b,
						11111000b,
						00100000b,
						01010000b,
						01010000b,
						00000000b

; chr(43) [+]
			BYTE		00000000b,
						00100000b,
						00100000b,
						11111000b,
						00100000b,
						00100000b

; chr(44) [,]
			BYTE		00000000b,
						00000000b,
						00000000b,
						00100000b,
						00100000b,
						01000000b

; chr(45) [-]
			BYTE		00000000b,
						00000000b,
						00000000b,
						01110000b,
						00000000b,
						00000000b

; chr(46) [.]
			BYTE		00000000b,
						00000000b,
						00000000b,
						00000000b,
						01100000b,
						01100000b

; chr(47) [/]
			BYTE		00000000b,
						00010000b,
						00010000b,
						00100000b,
						01000000b,
						01000000b

; chr(48) [0]
			BYTE		01110000b,
						10011000b,
						10101000b,
						10101000b,
						11001000b,
						01110000b

; chr(49) [1]
			BYTE		00100000b,
						01100000b,
						00100000b,
						00100000b,
						00100000b,
						01110000b

; chr(50) [SPACE]
			BYTE		01110000b,
						10001000b,
						00010000b,
						00100000b,
						01000000b,
						11111000b

; chr(51) [3]
			BYTE		01110000b,
						10001000b,
						00110000b,
						00001000b,
						10001000b,
						01110000b

; chr(52) [4]
			BYTE		00010000b,
						00110000b,
						01010000b,
						11111000b,
						00010000b,
						00010000b

; chr(53) [5]
			BYTE		11111000b,
						10000000b,
						11110000b,
						00001000b,
						10001000b,
						01110000b

; chr(54) [6]
			BYTE		01110000b,
						10000000b,
						11110000b,
						10001000b,
						10001000b,
						01110000b

; chr(55) [7]
			BYTE		11111000b,
						00001000b,
						00010000b,
						00100000b,
						00100000b,
						00100000b

; chr(56) [8]
			BYTE		01110000b,
						10001000b,
						01110000b,
						10001000b,
						10001000b,
						01110000b

; chr(57) [9]
			BYTE		01110000b,
						10001000b,
						10001000b,
						01111000b,
						00001000b,
						01110000b

; chr(58) [:]
			BYTE		00000000b,
						00000000b,
						00100000b,
						00000000b,
						00100000b,
						00000000b

; chr(59) [;]
			BYTE		00000000b,
						00000000b,
						00100000b,
						00000000b,
						00100000b,
						01000000b

; chr(60) [<]
			BYTE		00000000b,
						00010000b,
						00100000b,
						01000000b,
						00100000b,
						00010000b

; chr(61) [=]
			BYTE		00000000b,
						00000000b,
						01110000b,
						00000000b,
						01110000b,
						00000000b

; chr(62) [>]
			BYTE		00000000b,
						01000000b,
						00100000b,
						00010000b,
						00100000b,
						01000000b

; chr(63) [?]
			BYTE		01110000b,
						10001000b,
						00110000b,
						00100000b,
						00000000b,
						00100000b

; chr(64) [@]
			BYTE		01110000b,
						10001000b,
						10111000b,
						10110000b,
						10000000b,
						01110000b

; chr(65) [A]
			BYTE		01110000b,
						10001000b,
						10001000b,
						11111000b,
						10001000b,
						10001000b

; chr(66) [B]
			BYTE		11110000b,
						10001000b,
						11110000b,
						10001000b,
						10001000b,
						11110000b

; chr(67) [C]
			BYTE		01110000b,
						10001000b,
						10000000b,
						10000000b,
						10001000b,
						01110000b

; chr(68) [D]
			BYTE		11100000b,
						10010000b,
						10001000b,
						10001000b,
						10010000b,
						11100000b

; chr(69) [E]
			BYTE		11111000b,
						10000000b,
						11110000b,
						10000000b,
						10000000b,
						11111000b

; chr(70) [F]
			BYTE		11111000b,
						10000000b,
						11110000b,
						10000000b,
						10000000b,
						10000000b

; chr(71) [G]
			BYTE		01110000b,
						10001000b,
						10000000b,
						10111000b,
						10001000b,
						01110000b

; chr(72) [H]
			BYTE		10001000b,
						10001000b,
						11111000b,
						10001000b,
						10001000b,
						10001000b

; chr(73) [I]
			BYTE		11111000b,
						00100000b,
						00100000b,
						00100000b,
						00100000b,
						11111000b

; chr(74) [J]
			BYTE		11111000b,
						00010000b,
						00010000b,
						00010000b,
						10010000b,
						01100000b

; chr(75) [K]
			BYTE		10001000b,
						10010000b,
						11100000b,
						10010000b,
						10001000b,
						10001000b

; chr(76) [L]
			BYTE		10000000b,
						10000000b,
						10000000b,
						10000000b,
						10000000b,
						11111000b

; chr(77) [M]
			BYTE		11011000b,
						10101000b,
						10101000b,
						10101000b,
						10001000b,
						10001000b

; chr(78) [N]
			BYTE		11001000b,
						11001000b,
						10101000b,
						10101000b,
						10011000b,
						10011000b

; chr(79) [O]
			BYTE		01110000b,
						10001000b,
						10001000b,
						10001000b,
						10001000b,
						01110000b

; chr(80) [P]
			BYTE		11110000b,
						10001000b,
						10001000b,
						11110000b,
						10000000b,
						10000000b

; chr(81) [Q]
			BYTE		01110000b,
						10001000b,
						10001000b,
						10101000b,
						10011000b,
						01111000b

; chr(82) [R]
			BYTE		11110000b,
						10001000b,
						10001000b,
						11110000b,
						10100000b,
						10011000b

; chr(83) [S]
			BYTE		01110000b,
						10001000b,
						01100000b,
						00010000b,
						10001000b,
						01110000b

; chr(84) [T]
			BYTE		11111000b,
						00100000b,
						00100000b,
						00100000b,
						00100000b,
						00100000b

; chr(85) [SPACE]
			BYTE		10001000b,
						10001000b,
						10001000b,
						10001000b,
						10001000b,
						01110000b

; chr(86) [V]
			BYTE		10001000b,
						10001000b,
						10001000b,
						01010000b,
						01010000b,
						00100000b

; chr(87) [W]
			BYTE		10001000b,
						10001000b,
						10101000b,
						10101000b,
						10101000b,
						01010000b

; chr(88) [X]
			BYTE		10001000b,
						01010000b,
						00100000b,
						00100000b,
						01010000b,
						10001000b

; chr(89) [Y]
			BYTE		10001000b,
						01010000b,
						01010000b,
						00100000b,
						00100000b,
						00100000b

; chr(90) [Z]
			BYTE		11111000b,
						00010000b,
						00100000b,
						01000000b,
						10000000b,
						11111000b

; chr(91) [[]
			BYTE		00110000b,
						00100000b,
						00100000b,
						00100000b,
						00100000b,
						00110000b

; chr(92) [\]
			BYTE		00000000b,
						01000000b,
						01000000b,
						00100000b,
						00010000b,
						00010000b

; chr(93) []]
			BYTE		01100000b,
						00100000b,
						00100000b,
						00100000b,
						00100000b,
						01100000b

; chr(94) [^]
			BYTE		00100000b,
						01010000b,
						10001000b,
						00000000b,
						00000000b,
						00000000b

; chr(95) [_]
			BYTE		00000000b,
						00000000b,
						00000000b,
						00000000b,
						00000000b,
						11111000b

; chr(96) [`]
			BYTE		00100000b,
						00100000b,
						00010000b,
						00000000b,
						00000000b,
						00000000b

; chr(97) [a]
			BYTE		00000000b,
						00110000b,
						01001000b,
						00111000b,
						01011000b,
						01101000b

; chr(98) [b]
			BYTE		01000000b,
						01000000b,
						01110000b,
						01001000b,
						01001000b,
						01110000b

; chr(99) [c]
			BYTE		00000000b,
						00000000b,
						00110000b,
						01000000b,
						01000000b,
						00110000b

; chr(100) [d]
			BYTE		00001000b,
						00001000b,
						00111000b,
						01001000b,
						01001000b,
						00111000b

; chr(101) [e]
			BYTE		00000000b,
						00110000b,
						01001000b,
						01111000b,
						01000000b,
						00111000b

; chr(102) [f]
			BYTE		00000000b,
						00011000b,
						00100000b,
						01110000b,
						00100000b,
						00100000b

; chr(103) [g]
			BYTE		00000000b,
						00111000b,
						01001000b,
						00111000b,
						00001000b,
						00110000b

; chr(104) [h]
			BYTE		01000000b,
						01000000b,
						01110000b,
						01001000b,
						01001000b,
						01001000b

; chr(105) [i]
			BYTE		00100000b,
						00000000b,
						00100000b,
						00100000b,
						00100000b,
						00100000b

; chr(106) [j]
			BYTE		00010000b,
						00000000b,
						00010000b,
						00010000b,
						01010000b,
						00100000b

; chr(107) [k]
			BYTE		01000000b,
						01000000b,
						01010000b,
						01100000b,
						01010000b,
						01001000b

; chr(108) [l]
			BYTE		00100000b,
						00100000b,
						00100000b,
						00100000b,
						00100000b,
						00100000b

; chr(109) [m]
			BYTE		00000000b,
						00000000b,
						11110000b,
						10101000b,
						10101000b,
						10101000b

; chr(110) [n]
			BYTE		00000000b,
						00000000b,
						01100000b,
						01010000b,
						01010000b,
						01010000b

; chr(111) [o]
			BYTE		00000000b,
						00110000b,
						01001000b,
						01001000b,
						01001000b,
						00110000b

; chr(112) [p]
			BYTE		00000000b,
						00100000b,
						01010000b,
						01100000b,
						01000000b,
						01000000b

; chr(113) [q]
			BYTE		00000000b,
						00110000b,
						01010000b,
						00110000b,
						00011000b,
						00010000b

; chr(114) [r]
			BYTE		00000000b,
						00000000b,
						01011000b,
						01100000b,
						01000000b,
						01000000b

; chr(115) [s]
			BYTE		00000000b,
						00110000b,
						01000000b,
						00100000b,
						00010000b,
						01100000b

; chr(116) [t]
			BYTE		00000000b,
						00100000b,
						01110000b,
						00100000b,
						00101000b,
						00010000b

; chr(117) [u]
			BYTE		00000000b,
						00000000b,
						01010000b,
						01010000b,
						01010000b,
						00110000b

; chr(118) [v]
			BYTE		00000000b,
						00000000b,
						01010000b,
						01010000b,
						00100000b,
						00100000b

; chr(119) [w]
			BYTE		00000000b,
						00000000b,
						10001000b,
						10101000b,
						10101000b,
						01010000b

; chr(120) [x]
			BYTE		00000000b,
						00000000b,
						01010000b,
						00100000b,
						01010000b,
						01010000b

; chr(121) [y]
			BYTE		00000000b,
						00000000b,
						01010000b,
						01110000b,
						00010000b,
						01100000b

; chr(122) [z]
			BYTE		00000000b,
						00000000b,
						01110000b,
						00100000b,
						01000000b,
						01110000b

; chr(123) [{]
			BYTE		00010000b,
						00100000b,
						01100000b,
						00100000b,
						00100000b,
						00010000b

; chr(124) [|]
			BYTE		00110000b,
						00110000b,
						00110000b,
						00110000b,
						00110000b,
						00110000b

; chr(125) [}]
			BYTE		01000000b,
						00100000b,
						00110000b,
						00100000b,
						00100000b,
						01000000b

; chr(126) [~]
			BYTE		00000000b,
						01000000b,
						10101000b,
						00010000b,
						00000000b,
						00000000b

; some control characters (invisible)
			BYTE		(BYTES_PER_CHAR * 33) DUP(0)

; chr(160) [SPACE]
			BYTE		00000000b,
						00000000b,
						00000000b,
						00000000b,
						00000000b,
						00000000b

; chr(161)
			BYTE		00100000b,
						00000000b,
						00100000b,
						00100000b,
						00100000b,
						00000000b

; chr(162)
			BYTE		00001000b,
						00111000b,
						01010000b,
						01100000b,
						00111000b,
						01000000b

; chr(163)
			BYTE		00110000b,
						01001000b,
						01000000b,
						11110000b,
						01000000b,
						11111000b

; chr(164)
			BYTE		00000000b,
						10001000b,
						01110000b,
						01010000b,
						01110000b,
						10001000b

; chr(165)
			BYTE		10001000b,
						01010000b,
						11111000b,
						00100000b,
						11111000b,
						00100000b

; chr(166)
			BYTE		00100000b,
						00100000b,
						00000000b,
						00100000b,
						00100000b,
						00100000b

; chr(167)
			BYTE		00100000b,
						01010000b,
						00100000b,
						01010000b,
						00100000b,
						01010000b

; chr(168)
			BYTE		00000000b,
						01010000b,
						00000000b,
						00000000b,
						00000000b,
						00000000b

; chr(169)
			BYTE		01110000b,
						10111000b,
						11001000b,
						11001000b,
						10111000b,
						01110000b

; chr(170)
			BYTE		00110000b,
						01010000b,
						01110000b,
						00000000b,
						00000000b,
						00000000b

; chr(171)
			BYTE		00000000b,
						00101000b,
						01010000b,
						10100000b,
						01010000b,
						00101000b

; chr(172)
			BYTE		00000000b,
						11111000b,
						00001000b,
						00000000b,
						00000000b,
						00000000b

; chr(173)
			BYTE		00000000b,
						00000000b,
						00000000b,
						01110000b,
						00000000b,
						00000000b

; chr(174)
			BYTE		01110000b,
						10001000b,
						11111000b,
						11001000b,
						11001000b,
						01110000b

; chr(175)
			BYTE		11111000b,
						00000000b,
						00000000b,
						00000000b,
						00000000b,
						00000000b

; chr(176)
			BYTE		00100000b,
						01010000b,
						00100000b,
						00000000b,
						00000000b,
						00000000b

; chr(177)
			BYTE		00100000b,
						00100000b,
						11111000b,
						00100000b,
						00100000b,
						11111000b

; chr(178)
			BYTE		01110000b,
						00010000b,
						00100000b,
						01110000b,
						00000000b,
						00000000b

; chr(179)
			BYTE		01110000b,
						00110000b,
						00110000b,
						01110000b,
						00000000b,
						00000000b

; chr(180)
			BYTE		00010000b,
						00100000b,
						00000000b,
						00000000b,
						00000000b,
						00000000b

; chr(181)
			BYTE		00000000b,
						00000000b,
						01010000b,
						01010000b,
						01110000b,
						01000000b

; chr(182)
			BYTE		00111000b,
						01011000b,
						01011000b,
						00111000b,
						00011000b,
						00011000b

; chr(183)
			BYTE		00000000b,
						00100000b,
						00000000b,
						00000000b,
						00000000b,
						00000000b

; chr(184)
			BYTE		00000000b,
						00000000b,
						00000000b,
						00100000b,
						00010000b,
						01110000b

; chr(185)
			BYTE		01100000b,
						00100000b,
						00100000b,
						01110000b,
						00000000b,
						00000000b

; chr(186)
			BYTE		00100000b,
						01010000b,
						01010000b,
						00100000b,
						00000000b,
						00000000b

; chr(187)
			BYTE		00000000b,
						10100000b,
						01010000b,
						00101000b,
						01010000b,
						10100000b

; chr(188)
			BYTE		10001000b,
						10010000b,
						10101000b,
						01011000b,
						10111000b,
						00001000b

; chr(189)
			BYTE		10001000b,
						10010000b,
						10111000b,
						01001000b,
						10010000b,
						00111000b

; chr(190)
			BYTE		11101000b,
						01110000b,
						10101000b,
						01011000b,
						10111000b,
						00001000b

; chr(191)
			BYTE		00100000b,
						00000000b,
						00100000b,
						01100000b,
						10001000b,
						01110000b

; make the last 64 chars invisible
			BYTE		(BYTES_PER_CHAR * 64) DUP(0)


; removed code here
